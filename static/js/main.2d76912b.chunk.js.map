{"version":3,"sources":["api/until.js","component/postCard/store.js","component/messageDetail/store.js","component/navigation/index.js","component/album/store/index.js","component/album/index.js","api/config.js","component/message/index.js","api/getList.js","component/messageDetail/index.js","api/postMessage.js","component/tips/myConsole.js","component/postCard/index.js","component/HomeList/index.js","component/userList/index.js","component/tips/index.js","App.js","store/reducer.js","store/index.js","api/getWeb3.js","index.js"],"names":["multihashes","require","ipfs2multihash","hash","mh","fromB58String","Buffer","from","hashFunction","slice","toString","digest","multi2ipfshash","substr","toB58String","fromHexString","range","start","end","reverse","length","Array","x","i","PageRange","totalNum","pageNum","pageStep","defaultState","commentTo","isShow","reducer","state","action","type","undefined","data","newState","turnonPostCard","commenTo","uid","turnonDetail","withRouter","connect","dispatch","dispatchTurnonPostCard","dispatchTurnonDetail","props","history","textRef","useRef","console","log","className","onClick","to","exact","placeholder","ref","e","current","value","indexOf","int","parseInt","isNaN","push","number","imgList","album","dispatchTurnoffAlbum","memo","useState","index","setIndex","useMemo","useEffect","currentTarget","target","src","url","alt","map","item","imgIndex","key","ipfs","ipfsClient","config","axiosInstance","axios","create","baseURL","window","test","asd","getImgSrc","urlObj","postImg","file","a","add","response","path","status","messageCache","Map","parseInfo","rawInfo","content","contentHashFunc","time","author","id","commonTime","Date","toLocaleString","Number","getMessageinfo","contract","openApi","cache","get","methods","getMessage","call","info","set","getMessageData","params","arg","res","imgURL","BlockMessage","imgListClass","list","Message","isComment","handleClick","dispatchTurnonAlbum","href","title","stopPropagation","MessageCard","web3","accounts","eth","sendTransaction","then","catch","error","turnonAlbum","setData","setInfo","warn","getUserList","userId","getUserMessage","getCommentList","messageId","messageNum","getHomeList","detail","dispatchTurnoffDetail","commentList","setCommentList","saveToIpfs","imgObj","message","version","JSON","stringify","SaveToBlock","messageHash","contentTo","postComment","send","postMessage","eventEmitter","events","EventEmitter","myConsole","emit","success","on","bind","remove","removeListener","my","aaa","ImgList","onremove","preview","PostInput","onClose","fileRef","isUploading","setIsUploading","setImgList","updateImgList","updateFile","updateObj","prevList","rows","cols","filter","click","onChange","files","_file","now","name","size","raw","uploadFile","alert","finally","postCard","dispatchTurnoffPostCard","style","display","HomeList","match","page","Postlistener","Post","setList","setMessageNum","listener","removeAllListeners","UserList","Tips","domRef","useCallback","p","document","createElement","innerText","classList","onclick","appendChild","App","component","combineReducers","albumReducer","detailReducer","postCardReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Promise","resolve","reject","addEventListener","Object","defineProperty","configurable","writable","ethereum","Web3","enable","provider","providers","HttpProvider","net","getId","networkId","deployedNetwork","Sayeth","networks","getAccounts","Contract","abi","address","getWeb3Info","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2d76912b.chunk.js","sourcesContent":["const multihashes = require('multihashes')\r\n\r\n\r\nexport function ipfs2multihash(hash) {\r\n    let mh = multihashes.fromB58String(Buffer.from(hash))\r\n    return {\r\n        hashFunction: '0x' + mh.slice(0, 2).toString('hex'),\r\n        digest: '0x' + mh.slice(2).toString('hex'),\r\n    }\r\n}\r\n\r\nexport function multi2ipfshash(hashFunction, digest) {\r\n    hashFunction = hashFunction.substr(2)\r\n    digest = digest.substr(2)\r\n    return {\r\n        hash: multihashes.toB58String(multihashes.fromHexString(hashFunction + digest)),\r\n    }\r\n}\r\n\r\n\r\nconst range = (start, end, reverse=false) => {\r\n    const length = end - start\r\n    if(reverse) {\r\n        return Array.from(new Array(length), (x,i) => end -i - 1)\r\n    }\r\n    return Array.from(new Array(length), (x,i) => start + i)\r\n}\r\n\r\nexport const PageRange = (totalNum, pageNum, pageStep=10) => {\r\n    let start = totalNum - pageNum * pageStep + 1\r\n    let end = start + pageStep\r\n    if(start <= 1) {start = 1}\r\n    if(end <= 1){end = 1}\r\n    return range(start, end, true)\r\n}","const defaultState = {\r\n    commentTo: 0,\r\n    isShow: false\r\n}\r\n\r\nconst TURNOFF_POSTCARD = 'post/turnoff'\r\nconst TURNON_POSTCARD = 'post/turnon'\r\n\r\n\r\nconst reducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case TURNOFF_POSTCARD:\r\n            return { ...state, isShow: false }\r\n        case TURNON_POSTCARD:\r\n            if(action.data === undefined){\r\n                return { ...state, isShow: true }\r\n            }\r\n            const newState = {\r\n                commentTo: action.data,\r\n                isShow: true\r\n            }\r\n            return newState\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default reducer\r\nexport const turnoffPostCard = () => ({\r\n    type: TURNOFF_POSTCARD\r\n})\r\n\r\nexport const turnonPostCard = (commenTo) => ({\r\n    type: TURNON_POSTCARD,\r\n    data: commenTo\r\n})","const defaultState = {\r\n    uid: 0,\r\n    isShow: false\r\n}\r\n\r\nconst TURNOFF_DETAIL = 'detail/turnoff'\r\nconst TURNON_DETAIL = 'detail/turnon'\r\n\r\n\r\nconst reducer = (state = defaultState ,action) => {\r\n    switch(action.type) {\r\n        case TURNOFF_DETAIL:\r\n            return {isShow: false, uid: state.uid}\r\n        case TURNON_DETAIL:\r\n            const uid = action.data\r\n            const newState = {\r\n                uid,\r\n                isShow:true\r\n            }\r\n            return newState\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default reducer\r\nexport const turnoffDetail = () => ({\r\n    type: TURNOFF_DETAIL\r\n})\r\n\r\nexport const turnonDetail = (uid) => ({\r\n    type: TURNON_DETAIL,\r\n    data: uid\r\n})","import React, {useRef} from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { turnonPostCard } from '../postCard/store'\r\nimport {turnonDetail} from '../messageDetail/store'\r\nimport { withRouter } from 'react-router-dom';\r\nimport './style.css'\r\n\r\nconst Navigation = (props) => {\r\n    const { dispatchTurnonDetail,dispatchTurnonPostCard,history } = props\r\n    const textRef = useRef(null)\r\n    console.log(props)\r\n\r\n    const handleClick = (e) => {\r\n        if(!textRef.current) return\r\n        const value = textRef.current.value\r\n        console.log(value)\r\n        if(!value.indexOf('0x')) {\r\n            history.push(`/user/${textRef.current.value}`)\r\n        } else {\r\n            const int = parseInt(value)\r\n            if(isNaN(int)) return\r\n            dispatchTurnonDetail(int)\r\n        }\r\n    }\r\n    return (\r\n        <nav>\r\n            <div className='nav-box' >\r\n                <div className=\"nav-logo\" onClick={dispatchTurnonPostCard}>\r\n                    Sayeth\r\n            </div>\r\n                <div className='nav-link'>\r\n                    <NavLink to='/' exact>Home</NavLink>\r\n                    <NavLink to='/user' >User</NavLink>\r\n                    <div>\r\n                        <input className='seach' placeholder=\"MessageID or User ID\" ref={textRef}/>\r\n                        <button onClick={handleClick}>search</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    dispatchTurnonPostCard() {\r\n        dispatch(turnonPostCard(0))\r\n    },\r\n    dispatchTurnonDetail(uid) {\r\n        dispatch(turnonDetail(uid))\r\n    }\r\n})\r\nexport default withRouter(connect(() => ({}), mapDispatchToProps)(Navigation))","const defaultState = {\r\n    number: 0,\r\n    imgList: [],\r\n    isShow: false\r\n}\r\n\r\nconst TURNOFF_ALBUM = 'album/turnoff'\r\nconst TURNON_ALBUM = 'ablum/turnon'\r\n\r\n\r\nconst reducer = (state = defaultState ,action) => {\r\n    switch(action.type) {\r\n        case TURNOFF_ALBUM:\r\n            return {number: 0, imgList: [], isShow: false}\r\n        case TURNON_ALBUM:\r\n            const {number = 0, imgList} = action.data\r\n            const newState = {\r\n                number,\r\n                imgList,\r\n                isShow:true\r\n            }\r\n            return newState\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default reducer\r\nexport const turnofAlbum = () => ({\r\n    type: TURNOFF_ALBUM\r\n})\r\n\r\nexport const turnonAlbum = (imgList, number) => ({\r\n    type: TURNON_ALBUM,\r\n    data: {\r\n        imgList,\r\n        number\r\n    }\r\n})","import React, { useState, useEffect, useMemo,memo } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {turnofAlbum} from './store'\r\nimport './style.css'\r\nconst Album = (props) => {\r\n    const { imgList, isShow, number=0 } = props\r\n    const {dispatchTurnoffAlbum} = props\r\n    const [index, setIndex] = useState(0)\r\n    const length = useMemo(() => imgList.length, [imgList])\r\n    useEffect(() => {\r\n        setIndex(number)\r\n    }, [number])\r\n    \r\n    if(!isShow || !length) {\r\n        return <></>\r\n    }\r\n\r\n    return (\r\n        <figure \r\n        onClick={(e) => {\r\n            if(e.currentTarget !== e.target) return\r\n            dispatchTurnoffAlbum()\r\n        }}\r\n        >\r\n            <div className=\"album\">\r\n                <div className=\"picture\">\r\n                    <div className='arrow'>\r\n                        <div className=\"pre\" onClick={() => {index > 0 ? setIndex(index-1) : setIndex(length - 1)}}></div>\r\n                    </div>\r\n                    <div className='img-contaniner'>\r\n                        <img src={imgList[index].url} alt='img'/>\r\n                    </div>\r\n                    <div className='arrow'>\r\n                        <div className=\"next\" onClick={() => {index < length -1 ? setIndex(index+1) : setIndex(0)}}></div>\r\n                    </div>\r\n                </div>\r\n                <div className='preview'>\r\n                    {\r\n                    imgList.map((item, imgIndex) => {\r\n                        return (\r\n                            <img \r\n                            className={index === imgIndex? 'active' : ''}\r\n                            src={item.url} \r\n                            key={item.url+imgIndex} \r\n                            alt='preview'\r\n                            onClick={()=>{setIndex(imgIndex)}}\r\n                            />\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className='close' onClick={dispatchTurnoffAlbum}></div>\r\n            </div>\r\n        </figure>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state.album\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    dispatchTurnoffAlbum() {\r\n        dispatch(turnofAlbum())\r\n    }\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(memo(Album))","import axios from 'axios'\r\nimport ipfsClient from 'ipfs-http-client'\r\nimport stringify from 'json-stable-stringify'\r\nimport { ipfs2multihash, multi2ipfshash } from './until'\r\nimport config from './config.json'\r\nexport const ipfs = ipfsClient(config.ipfs)\r\n\r\nexport const axiosInstance = axios.create({\r\n    baseURL: config.baseURL\r\n})\r\nwindow.test = ipfs\r\nwindow.asd = axiosInstance\r\n\r\n\r\n\r\n\r\nconst FROM_URL = 0\r\nconst FROM_IPFS = 1\r\n\r\nexport const getImgSrc = (urlObj) => {\r\n    const { type, url } = urlObj\r\n    if (type === FROM_URL) {\r\n        return url\r\n    } else {\r\n        return config.baseURL + 'cat?arg=' + url\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const postImg = async (file) => {\r\n    for await (let response of test.add(file)) {\r\n        return { type: FROM_IPFS, url: response.path, status: 'success' }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst messageCache = new Map()\r\n\r\nconst parseInfo = (rawInfo) => {\r\n    const { content, contentHashFunc, time, author, commentTo, id } = rawInfo\r\n    const unixTimestamp = new Date(time * 1000)\r\n    const commonTime = unixTimestamp.toLocaleString()\r\n    const { hash } = multi2ipfshash(contentHashFunc, content)\r\n    return {\r\n        hash, time: commonTime, author, commentTo: Number.parseInt(commentTo), id: Number.parseInt(id)\r\n    }\r\n}\r\n\r\n\r\nexport const getMessageinfo = async (id) => {\r\n    const { contract } = window.openApi\r\n    //todo 加入缓存机制\r\n    const cache = messageCache.get(id)\r\n    if (cache) {\r\n        return cache\r\n    }\r\n    const rawInfo = await contract.methods.getMessage(id).call();\r\n    const info = parseInfo(rawInfo)\r\n    messageCache.set(id, info)\r\n    return info\r\n}\r\n\r\n\r\n\r\nexport const getMessageData = async (info) => {\r\n    const { hash } = info\r\n    const res = await axiosInstance.get('/cat',{params:{arg: hash}})\r\n    res.data.imgURL = res.data.imgURL.map(item => {\r\n        const url = getImgSrc(item)\r\n        return {\r\n            url\r\n        }\r\n    })\r\n    return res.data\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getMessageData, getMessageinfo } from '../../api/config'\r\nimport { turnonAlbum } from '../album/store'\r\nimport { turnonDetail } from '../messageDetail/store'\r\nimport { turnonPostCard } from '../postCard/store'\r\nimport './style.css'\r\n\r\nconst BlockMessage = () => {\r\n    return (\r\n        <div>the message is blocked by admin</div>\r\n    )\r\n}\r\n\r\nconst imgListClass = (list) => {\r\n    if (!list) return 'img-list'\r\n    const number = list.length\r\n    if (number < 2) {\r\n        return 'img-list img-list-1'\r\n    } else if (number < 5) {\r\n        return 'img-list img-list-2'\r\n    }\r\n    return 'img-list img-list-3'\r\n}\r\n\r\n\r\nconst Message = (props) => {\r\n    const { info, data, isComment, handleClick } = props\r\n    const { dispatchTurnonAlbum, dispatchTurnonPostCard } = props\r\n    return (\r\n        <>\r\n            {info &&\r\n                <>\r\n                    <div className='title'>\r\n                        <a href={'#' + info.id} className='avator' title={info.id}></a>\r\n                        <div>\r\n                            <p className='time'>{info.time}</p>\r\n                            <p className='author'><span>#{info.id}</span> createby <a href={'#/user/' + info.author}>{info.author}</a></p>\r\n                        </div>\r\n\r\n                    </div>\r\n                    {/* <p>commentTo: {info.commentTo}</p> */}\r\n                    {data &&\r\n                        <>\r\n                            <div className='content' onClick={handleClick}>{data.content}</div>\r\n                            {data.imgURL.length > 0 &&\r\n                                <div className={imgListClass(data.imgURL)} >\r\n                                    {data.imgURL.map((item, index) => {\r\n                                        return (\r\n                                            <div\r\n                                                key={item.url + index}\r\n                                                className=\"img-item\"\r\n                                                onClick={(e) => {\r\n                                                    e.stopPropagation()\r\n                                                    dispatchTurnonAlbum(data.imgURL, index)\r\n                                                }}\r\n                                            ><img src={item.url} alt={info.id} /></div>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                            }\r\n                        </>\r\n                    }\r\n                    {!isComment &&\r\n                        <>\r\n                            {info.commentTo !== 0 && <MessageCard uid={info.commentTo} isComment={true} />}\r\n                            <div>\r\n                                <div className='line'></div>\r\n                                <button\r\n                                    className='message-button'\r\n                                    onClick={(e) => {\r\n                                        e.stopPropagation()\r\n                                        dispatchTurnonPostCard(info.id)\r\n                                    }}\r\n                                >\r\n                                    Reply\r\n                                </button>\r\n                                <button\r\n                                    className='message-button'\r\n                                    onClick={(e) => {\r\n                                        e.stopPropagation()\r\n                                        const {web3, accounts} = window.openApi\r\n                                        web3.eth.sendTransaction({\r\n                                            from: accounts[0],\r\n                                            to: info.author,\r\n                                            value: '1000000000000000'\r\n                                        })\r\n                                        .then(console.log).catch(console.error)\r\n                                    }}\r\n                                >\r\n                                    Reward\r\n                                </button>\r\n                            </div>\r\n                        </>\r\n                    }\r\n\r\n\r\n                </>\r\n            }\r\n\r\n        </ >\r\n    )\r\n}\r\n\r\nconst MessageCardNative = (props) => {\r\n    const { uid, isComment = false } = props\r\n    const { dispatchTurnonAlbum, dispatchTurnonDetail, dispatchTurnonPostCard } = props\r\n    const [data, setData] = useState()\r\n    const [info, setInfo] = useState()\r\n    useEffect(() => {\r\n        if (uid === 0) return\r\n        getMessageinfo(uid).then((res) => {\r\n            setInfo(res)\r\n        }).catch(console.warn)\r\n        return () => {\r\n            setInfo(null)\r\n        }\r\n    }, [uid])\r\n\r\n    useEffect(() => {\r\n        if (!info || info.id === 0) return\r\n        getMessageData(info).then((res) => {\r\n            setData(res)\r\n        }).catch(console.warn)\r\n        return () => {\r\n            setData(null)\r\n        }\r\n    }, [info])\r\n    const handleClick = (e) => {\r\n        if(e.target !== e.currentTarget) return\r\n        dispatchTurnonDetail(uid)\r\n    }\r\n    return (\r\n        <div className={isComment ? 'message-card origin-message' : 'message-card'} onClick={handleClick}>\r\n            {\r\n                uid && (!info || info.id) ? (\r\n                    <Message\r\n                        isComment={isComment}\r\n                        info={info}\r\n                        data={data}\r\n                        dispatchTurnonAlbum={dispatchTurnonAlbum}\r\n                        dispatchTurnonPostCard={dispatchTurnonPostCard}\r\n                        handleClick={handleClick}\r\n                    />\r\n                ) : <BlockMessage />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = () => ({})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    dispatchTurnonAlbum(imgList, number) {\r\n        dispatch(turnonAlbum(imgList, number))\r\n    },\r\n    dispatchTurnonDetail(uid) {\r\n        dispatch(turnonDetail(uid))\r\n    },\r\n    dispatchTurnonPostCard(commentTo) {\r\n        dispatch(turnonPostCard(commentTo))\r\n    }\r\n})\r\n\r\nconst MessageCard = connect(mapStateToProps, mapDispatchToProps)(MessageCardNative)\r\nexport default MessageCard\r\n","\r\nimport {PageRange} from './until'\r\nexport const getUserList = async(userId) => {\r\n    const {openApi} = window\r\n    const response = await openApi.contract.methods.getUserMessage(userId).call()\r\n    return response.map((item) => parseInt(item)).reverse()\r\n}\r\n\r\nexport const getCommentList = async(messageId) => {\r\n    const {openApi} = window\r\n    const response = await openApi.contract.methods.getCommentList(messageId).call()\r\n    return response.map((item) => parseInt(item))\r\n}\r\n\r\nlet messageNum = null\r\nexport const getHomeList = async(pageNum) => {\r\n    const {openApi} = window\r\n    if(pageNum === 1) {\r\n        const response =parseInt(await openApi.contract.methods.messageNum().call())\r\n        messageNum = response\r\n        const list = PageRange(messageNum, 1)\r\n        return {\r\n            messageNum,\r\n            list\r\n        }\r\n    } else {\r\n        const list = PageRange(messageNum, pageNum)\r\n        return {\r\n            messageNum,\r\n            list\r\n        }\r\n    }\r\n}","import React, { useState, useEffect, useMemo, memo } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { turnoffDetail } from './store'\r\nimport MessageCard from '../message'\r\nimport {getCommentList} from '../../api/getList'\r\nimport './style.css'\r\n\r\nconst Album = (props) => {\r\n    const { isShow, uid } = props\r\n    const { dispatchTurnoffDetail } = props\r\n    const [commentList, setCommentList] = useState([])\r\n    useEffect(() => {\r\n        if(!uid) return\r\n        getCommentList(uid).then(setCommentList).catch(console.warn)\r\n    }, [uid])\r\n\r\n    if (!isShow) {\r\n        return <></>\r\n    }\r\n\r\n    const handleClick = (e) => {\r\n        if (e.target !== e.currentTarget) return\r\n        dispatchTurnoffDetail()\r\n    }\r\n\r\n    return (\r\n        <div className='detail' onClick={handleClick}>\r\n            <MessageCard uid={uid} />\r\n            <div className='comment'>\r\n                <p>comment</p>\r\n                {\r\n                    commentList.map((item) => {\r\n                        return <MessageCard uid={item} key={uid} isComment={true} />\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state.detail\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    dispatchTurnoffDetail() {\r\n        dispatch(turnoffDetail())\r\n    }\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(memo(Album))","\r\nimport {ipfs} from './config'\r\nimport { ipfs2multihash, multi2ipfshash } from './until'\r\nconst saveToIpfs = async (content, imgList = []) => {\r\n    const imgURL = imgList.map(imgObj => {\r\n        const { type, url } = imgObj\r\n        return { type, url }\r\n    })\r\n\r\n    const message = { version: 0, content, imgURL }\r\n    let res\r\n    console.log(JSON.stringify(message))\r\n    for await (let file of ipfs.add(JSON.stringify(message))) {\r\n        res = file.path\r\n    }\r\n    console.log(res)\r\n    return res\r\n}\r\n\r\nconst SaveToBlock = async (messageHash, contentTo = 0) => {\r\n    const { openApi } = window\r\n    console.log(messageHash)\r\n    const { hashFunction, digest } = ipfs2multihash(messageHash)\r\n    console.log(hashFunction, digest)\r\n    console.log(multi2ipfshash(hashFunction, digest))\r\n    const author = openApi.accounts[0]\r\n    let res\r\n    if (contentTo) {\r\n        res = await openApi.contract.methods.postComment(digest,hashFunction,contentTo).send({ from: author })\r\n    } else {\r\n        res = await openApi.contract.methods.postMessage(digest,hashFunction).send({ from: author })\r\n    }\r\n    return res\r\n}\r\n\r\nexport const postMessage = async (content, imgList = [],contentTo = 0) => {\r\n    const messageHash = await saveToIpfs(content, imgList)\r\n    const res = await  SaveToBlock(messageHash, contentTo)\r\n    return res\r\n}","import events from 'events'\r\nconst eventEmitter = new events.EventEmitter()\r\n\r\n\r\nconst myConsole = {\r\n    error: (info) => {\r\n        eventEmitter.emit('error', info, 'error')\r\n    },\r\n    info: (info) => eventEmitter.emit('info', info, 'info'),\r\n    success: (info) => eventEmitter.emit('success', info, 'success'),\r\n    on: eventEmitter.on.bind(eventEmitter),\r\n    remove: eventEmitter.removeListener.bind(eventEmitter)\r\n}\r\n\r\nwindow.my = myConsole\r\nwindow.aaa = eventEmitter\r\nexport default myConsole","import React, { useRef, useEffect, useState } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { postImg, getImgSrc } from '../../api/config'\r\nimport { postMessage} from '../../api/postMessage'\r\nimport { turnoffPostCard } from './store'\r\nimport MessageCard from '../message'\r\nimport myConsole from '../tips/myConsole'\r\nimport './style.css'\r\n\r\nconst ImgList = (props) => {\r\n    const { imgList, onremove } = props\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                imgList.map((item, index) => {\r\n                    return (\r\n                        <div className=\"upload-item\" key={index}>\r\n                            {item.status === 'uploading' &&\r\n                                <div className='uploading'></div>\r\n                            }\r\n                            {item.status === 'success' &&\r\n                                <>\r\n                                    <img src={item.preview} alt='item.url' />\r\n                                    <button onClick={() => { onremove(item) }}>delete</button></>\r\n                            }\r\n                            {item.status === 'error' &&\r\n                                <>\r\n                                    <div className='error'>Fail...</div>\r\n                                    <button>delete</button>\r\n                                </>\r\n                            }\r\n                        </div>\r\n                    )\r\n\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}\r\nconst PostInput = (props) => {\r\n    const { commentTo, onClose } = props\r\n\r\n    const textRef = useRef(null)\r\n    const fileRef = useRef(null)\r\n    const [isUploading, setIsUploading] = useState(false)\r\n    const [imgList, setImgList] = useState([])\r\n    const updateImgList = (updateFile, updateObj) => {\r\n        setImgList(prevList => {\r\n            console.log(updateFile, updateObj, prevList)\r\n            return prevList.map(file => {\r\n                if (file.uid === updateFile.uid) {\r\n                    return { ...file, ...updateObj }\r\n                } else {\r\n                    return file\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    const handleUpload = () => {\r\n        if (fileRef.current) {\r\n            fileRef.current.click()\r\n        }\r\n    }\r\n    const handlePost = () => {\r\n        if (textRef.current) {\r\n            if(textRef.current.value.length < 10) {\r\n                alert('you message is to short!')\r\n                return\r\n            }\r\n            const content = textRef.current.value\r\n            setIsUploading(true)\r\n            postMessage(content,imgList, commentTo).then((res) => {\r\n                myConsole.success(`Post success, you can fresh the 'Home' page or go to 'User' to see the message`)\r\n                console.log(res)\r\n                setImgList([])\r\n                textRef.current.value = ''\r\n                onClose()\r\n            }).catch((e) => {\r\n                console.error('Post message error, maybe you should confirm you net and try again later..')\r\n            }).finally(() => {setIsUploading(false)})\r\n        }\r\n    }\r\n\r\n    const handleRemove = (file) => {\r\n        setImgList((prevList) => {\r\n            return prevList.filter(item => item.uid !== file.uid)\r\n        })\r\n    }\r\n    const uploadFile = (file) => {\r\n        let _file = {\r\n            uid: -Date.now(),\r\n            status: 'uploading',\r\n            name: file.name,\r\n            size: file.size,\r\n            raw: file\r\n        }\r\n        setImgList(prevList => {\r\n            return [...prevList, _file]\r\n        })\r\n\r\n        postImg(file).then(res => {\r\n            console.log(res)\r\n            res.preview = getImgSrc(res)\r\n            updateImgList(_file, res)\r\n        }).catch((e) => {\r\n            console.log(e)\r\n            updateImgList(_file, { status: 'error' })\r\n        })\r\n    }\r\n    const handleFileChange = (e) => {\r\n        const files = e.target.files\r\n        console.log(files)\r\n        if (!files) {\r\n            return\r\n        }\r\n        uploadFile(files[0])\r\n        if (fileRef.current) {\r\n            fileRef.current.value = ''\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            {commentTo === 0 ? <p>Send a message</p> : <p>reply to message: #{commentTo}</p>}\r\n            <textarea ref={textRef} rows=\"3\" cols=\"20\" placeholder=\"write here\" ></textarea>\r\n            <div className='upload-preview'>\r\n                <ImgList imgList={imgList} onremove={handleRemove} />\r\n                {imgList.length < 9 &&\r\n                    (\r\n                        <div\r\n                            className='upload-item'\r\n                            onClick={handleUpload}\r\n                        >\r\n                            <div className='add'>+</div>\r\n                        </div>\r\n                    )\r\n                }\r\n                <input type='file' ref={fileRef} onChange={handleFileChange} />\r\n            </div>\r\n            <button className='post-button' onClick={handlePost}>post</button>\r\n            {isUploading && <div className='post-loading'><div></div></div>}\r\n        </>\r\n    )\r\n}\r\nconst PostCard = (props) => {\r\n    const { isShow, commentTo, dispatchTurnoffPostCard } = props\r\n    const handleClose = (e) => {\r\n        if (e.target !== e.currentTarget) return\r\n        dispatchTurnoffPostCard()\r\n    }\r\n    return (\r\n        <>\r\n            <div\r\n                className='postcard'\r\n                style={{ display: isShow ? 'block' : 'none' }}\r\n                onClick={handleClose}\r\n            >\r\n                <div className='post-container'>\r\n                    <PostInput commentTo={commentTo} onClose={dispatchTurnoffPostCard}/>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state.postCard\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    dispatchTurnoffPostCard() {\r\n        dispatch(turnoffPostCard())\r\n    }\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(PostCard)","import React, { useEffect, useRef, useState } from 'react'\r\nimport MessageCard from '../message'\r\nimport { getHomeList } from '../../api/getList'\r\nimport './style.css'\r\nconst HomeList = (props) => {\r\n    const { history } = props\r\n    const { page: strPage = 1 } = props.match.params\r\n    const page = parseInt(strPage)\r\n    const Postlistener = useRef(window.openApi.contract.events.Post())\r\n    const [list, setList] = useState([])\r\n    const [messageNum, setMessageNum] = useState(0)\r\n    useEffect(() => {\r\n        const listener = Postlistener.current\r\n        listener.on('data', console.log)\r\n        return () => {\r\n            listener.removeAllListeners()\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getHomeList(page).then((res) => {\r\n            setList(res.list)\r\n            setMessageNum(res.messageNum)\r\n        }).catch(console.warn)\r\n    }, [page])\r\n\r\n\r\n    return (\r\n        <div className='center'>\r\n            {list.length === 0 && <div className=\"message-card\"><div>no available message now</div></div>}\r\n            {\r\n                list.map((item, index) => {\r\n                    return <MessageCard key={item} uid={item} />\r\n                })\r\n            }\r\n            <div className=\"pagging\">\r\n                {\r\n                    page > 1 &&\r\n                    <button onClick={() => { history.push(`/${page - 1}`) }}>pre</button>\r\n                }\r\n                {\r\n                    page * 10 < messageNum ?\r\n                    <button onClick={() => { history.push(`/${page + 1}`) }}>next</button> : <p>the Last page</p>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeList","import React, { useEffect, useRef, useState } from 'react'\r\nimport {getUserList} from '../../api/getList'\r\nimport MessageCard from '../message'\r\nconst UserList = (props) => {\r\n    console.log(props)\r\n    const userId = props.match.params.id === undefined ? window.openApi.accounts[0] : props.match.params.id\r\n    console.log(userId)\r\n    const [list, setList] = useState([])\r\n    useEffect(() => {\r\n        setList([])\r\n    }, [userId])\r\n\r\n\r\n    useEffect(() => {\r\n        let uid\r\n        if(!userId) {\r\n            uid = window.openApi.accounts[0]\r\n        } else {\r\n            if (userId.length !== 42) {\r\n                alert('the id is error')\r\n                return\r\n            }\r\n            uid = userId\r\n        }\r\n        getUserList(uid).then(setList).catch(console.warn)\r\n    }, [userId])\r\n    return (\r\n        <div className='center'>\r\n            {list.length === 0 && <div className=\"message-card\"><div>no available message now</div></div>}\r\n            {\r\n                list.map((item, index) =>{\r\n                    return <MessageCard key={item} uid={item}/>\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserList","import React, { useEffect, useState, useRef, useCallback } from 'react'\r\nimport myConsole from './myConsole'\r\nimport './style.css'\r\nconst Tips = () => {\r\n    const domRef = useRef(null)\r\n    const setInfo = useCallback((data, type) => {\r\n        if(! domRef.current) return\r\n        const p = document.createElement('p')\r\n        p.innerText = data\r\n        p.classList.add('tips', type)\r\n        p.onclick = () => p.remove()\r\n        domRef.current.appendChild(p)\r\n    },[domRef])\r\n\r\n    useEffect(() => {\r\n        myConsole.on('info', setInfo)\r\n        myConsole.on('error', setInfo)\r\n        myConsole.on('success', setInfo)\r\n        return () => {\r\n            myConsole.remove('info', setInfo)\r\n            myConsole.remove('error', setInfo)\r\n            myConsole.remove('success', setInfo)\r\n        }\r\n    }, [setInfo])\r\n    return (\r\n        <aside >\r\n            <div className='tip-container' ref={domRef}>\r\n            <p className='tips info'>Hello! welcome to use Sayeth, click the logo ↑ ↑ ↑ to write a new message</p>\r\n            <p className='tips info'>matemask is required and you need to switch to Ropsten network</p>\r\n            </div>\r\n        </aside>\r\n    )\r\n}\r\n\r\n\r\nexport default Tips","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport Navigation from './component/navigation'\r\nimport Album from './component/album'\r\nimport Detail from './component/messageDetail'\r\nimport PostCard from './component/postCard'\r\nimport HomeList from './component/HomeList'\r\nimport UserList from './component/userList'\r\nimport Tips from './component/tips'\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Album />\r\n      <Detail />\r\n      <PostCard />\r\n      <Navigation />\r\n      <main>\r\n        <Tips />\r\n        <Switch>\r\n          <Route path='/user/:id?/' component={UserList}></Route>\r\n          <Route path='/:page?/' component={HomeList}></Route>\r\n        </Switch>\r\n        <aside/>\r\n      </main>\r\n    </Router>\r\n  )\r\n}\r\n\r\n\r\n// const App = () => {\r\n//   return (\r\n//     <>\r\n//     <PostCard isShow={true} />\r\n//     </>\r\n//   )\r\n// }\r\nexport default App;\r\n","import {combineReducers} from 'redux'\r\nimport albumReducer from '../component/album/store'\r\nimport detailReducer from '../component/messageDetail/store'\r\nimport postCardReducer from '../component/postCard/store'\r\nconst reducer = combineReducers({\r\n    album: albumReducer,\r\n    detail: detailReducer,\r\n    postCard: postCardReducer\r\n})\r\nexport default reducer\r\n","import {createStore, compose, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport reducer from './reducer'\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst store = createStore (reducer, composeEnhancers (\r\n  applyMiddleware (thunk)\r\n));\r\n\r\nexport default store","import Web3 from \"web3\";\r\nimport Sayeth from '../contracts/Sayeth.json'\r\nimport { open } from \"yauzl\";\r\nconst getWeb3 = () =>\r\n  new Promise((resolve, reject) => {\r\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\r\n    window.addEventListener(\"load\", async () => {\r\n      // Modern dapp browsers...\r\n      window.openApi = {}\r\n      Object.defineProperty(window, 'openApi', {\r\n        configurable: false,\r\n        writable: false\r\n      })\r\n      if (window.ethereum) {\r\n        const web3 = new Web3(window.ethereum);\r\n        try {\r\n          // Request account access if needed\r\n          await window.ethereum.enable();\r\n\r\n          window.ethereum.on('accountsChanged', function (accounts) {\r\n            window.openApi.accounts = accounts\r\n          })\r\n          resolve(web3);\r\n        } catch (error) {\r\n          reject(error);\r\n        }\r\n      }\r\n      // Legacy dapp browsers...\r\n      else if (window.web3) {\r\n        // Use Mist/MetaMask's provider.\r\n        const web3 = window.web3;\r\n\r\n        web3.on('accountsChanged', function (accounts) {\r\n          window.openApi.accounts = accounts\r\n        })\r\n        console.log(\"Injected web3 detected.\");\r\n        resolve(web3);\r\n      }\r\n      // Fallback to localhost; use dev console port by default...\r\n      else {\r\n        const provider = new Web3.providers.HttpProvider(\r\n          \"http://127.0.0.1:8545\"\r\n        );\r\n        const web3 = new Web3(provider);\r\n        console.log(\"No web3 instance injected, using Local web3.\");\r\n        resolve(web3);\r\n      }\r\n    });\r\n  });\r\n\r\nconst getWeb3Info = async () => {\r\n  const web3 = await getWeb3()\r\n  const openApi = window.openApi\r\n  const networkId = await web3.eth.net.getId()\r\n  const deployedNetwork = Sayeth.networks[networkId]\r\n  openApi.accounts = await web3.eth.getAccounts()\r\n  openApi.contract = new web3.eth.Contract(\r\n    Sayeth.abi,\r\n    deployedNetwork && deployedNetwork.address,\r\n  )\r\n  openApi.web3 = web3\r\n  return openApi\r\n}\r\nexport default getWeb3Info\r\n\r\n// export default getWeb3;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n// import './index.css'\r\nimport App from './App'\r\nimport store from './store'\r\nimport getWeb3Info from './api/getWeb3'\r\nimport {Provider} from 'react-redux'\r\n\r\ngetWeb3Info().then(() => {\r\n    console.log(window.openApi)\r\n    ReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'))\r\n}).catch((e) => {\r\n    alert('web3 error!')\r\n    console.log(e)\r\n    ReactDOM.render(<div>error!</div>, document.getElementById('root'))\r\n})\r\n\r\n// ReactDOM.render(<App />, document.getElementById('root'))\r\n// import ipfsClient from 'ipfs-http-client'\r\n// const a = ipfsClient({ host: 'localhost', port: '5001', protocol: 'http' })\r\n// window.a = a\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.register();\r\n"],"sourceRoot":""}